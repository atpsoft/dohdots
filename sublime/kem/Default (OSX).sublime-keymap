[

// jove not integrated keybinds
    // // commands that move and set the mark first
    {"keys": ["ctrl+j","ctrl+e"], "command": "jove_move_to", "args": {"to": "eof"}},
    {"keys": ["ctrl+j","ctrl+a"], "command": "jove_move_to", "args": {"to": "bof"}},
    // {"keys": ["super+."], "command": "jove_move_to", "args": {"to": "eow"}},
    // {"keys": ["super+,"], "command": "jove_move_to", "args": {"to": "bow"}},

    // /////////////////////////////
    // // Begin emacs window cmds //
    // /////////////////////////////
    // {"keys": ["ctrl+x", "d"], "command": "jove_pane_cmd", "args": {"cmd": "destroy", "pane": "self"}},
    // {"keys": ["ctrl+x", "1"], "command": "jove_pane_cmd", "args": {"cmd": "destroy", "pane": "others"}},
    // {"keys": ["ctrl+x", "2"], "command": "jove_pane_cmd", "args": {"cmd": "split"}},
    // {"keys": ["ctrl+x", "g"], "command": "jove_pane_cmd", "args": {"cmd": "grow", "amount": 1}},
    // {"keys": ["ctrl+x", "s"], "command": "jove_pane_cmd", "args": {"cmd": "grow", "amount": -1}},
    // {"keys": ["ctrl+x", "n"], "command": "jove_pane_cmd", "args": {"cmd": "move", "direction": "next"}},
    // {"keys": ["ctrl+x", "p"], "command": "jove_pane_cmd", "args": {"cmd": "move", "direction": "prev"}},
    // {"keys": ["ctrl+x", "o"], "command": "jove_pane_cmd", "args": {"cmd": "move", "direction": "prev"}},
    // {"keys": ["super+shift+["], "command": "jove_pane_cmd", "args": {"cmd": "move", "direction": "left"}},
    // {"keys": ["super+shift+]"], "command": "jove_pane_cmd", "args": {"cmd": "move", "direction": "right"}},

    // overrides cmd-c copy
    // {"keys": ["super+c"], "command": "jove_case_word", "args": {"direction": 1, "mode": "title"}},

    // //////////////////////////////////////////////////////////////////////////////
    // // Other settings/bindings to complete the Emacs picture for me personally. //
    // //////////////////////////////////////////////////////////////////////////////

    // {"keys": ["super+e"], "command": "find_under_expand"},
    {"keys": ["ctrl+a"], "command": "move_to", "args": {"to": "hardbol", "extend": false }},
    {"keys": ["ctrl+e"], "command": "move_to", "args": {"to": "hardeol", "extend": false }},
    // {"keys": ["super+m"],  "command": "move_to",  "args": {  "to": "bol",  "extend": false }},
    {"keys": ["ctrl+."], "command": "move", "args": {"by": "pages", "forward": true }},
    {"keys": ["ctrl+,"], "command": "move", "args": {"by": "pages", "forward": false }},

    // {"keys": ["super+n"], "command": "next_result"},
    // {"keys": ["super+p"], "command": "prev_result"},

    // {"keys": ["super+/"], "command": "toggle_comment"},
    // {"keys": ["ctrl+x", "k"], "command": "close"},

    // {"keys": ["ctrl+d"], "command": "right_delete"},

    // {"keys": ["ctrl+\\"], "command": "undo"},
    // {"keys": ["ctrl+shift+\\"], "command": "redo"},
    // {"keys": ["super+r"], "command": "show_panel", "args": {"panel": "replace" }},

    // {"keys": ["super+h"], "command": "auto_complete"},
    // {"keys": ["ctrl+x", "ctrl+s"], "command": "save"},
    // {"keys": ["ctrl+x", "ctrl+m"], "command": "save_all"},
    // {"keys": ["ctrl+x", "ctrl+f"], "command": "i_opener"},
    // {"keys": ["ctrl+z"], "command": "scroll_lines", "args": {"amount": -1 }},

    // {"keys": ["super+z"], "command": "scroll_lines", "args": {"amount": 1 }},
    // {"keys": ["ctrl+x", "ctrl+e"], "command": "build", "args": {"name": "make_deploy" }},


    // {"keys": ["super+j"], "command": "wrap_lines", "args": {"width": 100}},
    // {"keys": ["shift+super+-"], "command": "decrease_font_size"},

    //
    // Mark and point, kill region, kill line, yank and yank pop, deletion commands.
    //
    {"keys": ["ctrl+space"], "command": "jove_set_mark", "args" : {"active_mark": true}},
    {"keys": ["ctrl+x", "ctrl+x"], "command": "jove_swap_point_and_mark"},
    {"keys": ["ctrl+k"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_for_kill_line"}},
    {"keys": ["ctrl+w"], "command": "jove_kill_region"},
    {"keys": ["ctrl+c"], "command": "jove_kill_region", "args": {"is_copy": true}},
    {"keys": ["super+c"], "command": "jove_kill_region", "args": {"is_copy": true}},
    {"keys": ["ctrl+y"], "command": "jove_yank"},
    {"keys": ["super+y"], "command": "jove_yank", "args": {"pop": 1}},
    {"keys": ["super+shift+y"], "command": "jove_yank", "args": {"pop": -1}},


//    {"keys": ["super+d"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_word", "direction": 1}},
    {"keys": ["super+backspace"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_word", "direction": -1}},
    {"keys": ["alt+d"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_word", "direction": 1}},
    {"keys": ["alt+backspace"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_word", "direction": -1}},

    {"keys": ["ctrl+super+k"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_sexpr", "direction": 1}},
    {"keys": ["ctrl+alt+k"], "command": "jove_move_then_delete", "args": {"move_cmd": "jove_move_sexpr", "direction": 1}},

    {"keys": ["super+\\"], "command": "jove_delete_white_space"},


    {"keys": ["ctrl+o"], "command": "jove_open_line"},
    {"keys": ["ctrl+l"], "command": "jove_center_view"},
    {"keys": ["ctrl+x", "g"], "command": "jove_goto_line"},
    {"keys": ["super+g"], "command": "jove_goto_line"},

    //
    // Motion commands: forward/backward word, identifiers (sexpression), beginning/end of file/window,
    // incremental search, etc./
    //
    {"keys": ["ctrl+o"], "command": "jove_move_word", "args": {"direction": 1}},
    {"keys": ["ctrl+super+o"], "command": "jove_move_sexpr", "args": {"direction": 1}},
    {"keys": ["ctrl+u"], "command": "jove_move_word", "args": {"direction": -1}},
    {"keys": ["ctrl+super+u"], "command": "jove_move_sexpr", "args": {"direction": -1}},
    {"keys": ["super+u"], "command": "jove_case_word", "args": {"direction": 1, "mode": "upper"}},
    {"keys": ["super+l"], "command": "jove_case_word", "args": {"direction": 1, "mode": "lower"}},

    // indent region
    {"keys": ["super+["], "command": "jove_shift_region", "args": {"direction": -1}},
    {"keys": ["super+]"], "command": "jove_shift_region", "args": {"direction": 1}},

    // emacs-style numeric argument handling -- meta-100 backspace, e.g.
    {"keys": ["super+-"], "command": "jove_universal_argument", "args": {"value": "negative"}},
    {"keys": ["super+1"], "command": "jove_universal_argument", "args": {"value": 1}},
    {"keys": ["super+2"], "command": "jove_universal_argument", "args": {"value": 2}},
    {"keys": ["super+3"], "command": "jove_universal_argument", "args": {"value": 3}},
    {"keys": ["super+4"], "command": "jove_universal_argument", "args": {"value": 4}},
    {"keys": ["super+5"], "command": "jove_universal_argument", "args": {"value": 5}},
    {"keys": ["super+6"], "command": "jove_universal_argument", "args": {"value": 6}},
    {"keys": ["super+7"], "command": "jove_universal_argument", "args": {"value": 7}},
    {"keys": ["super+8"], "command": "jove_universal_argument", "args": {"value": 8}},
    {"keys": ["super+9"], "command": "jove_universal_argument", "args": {"value": 9}},
    {"keys": ["super+0"], "command": "jove_universal_argument", "args": {"value": 0}},

    // make tab work a bit different -- tries a couple different options for you, rather than just indenting forever
    {"keys": ["tab"], "command": "jove_indent",  "context": [
        {"key": "panel_has_focus",  "operand": false },
        {"key": "auto_complete_visible", "operand": false },
        {"key": "has_next_field", "operand": false },
        {"key": "overlay_visible", "operand": false }]
    },


  { "keys": ["ctrl+z"], "command": "undo"},

  // quick panel of only currently open files - sort of like emacs switch buffer
  { "keys": ["ctrl+x", "b"], "command": "goto_open_file"},

  // may not keep this long term, but it's handy for transition if nothing else
  { "keys": ["ctrl+x", "ctrl+s"], "command": "save"},

  // many of these are copies of the default keybindings for Escape, just mapped to ctrl+g instead, but with some tweaks
  { "keys": ["ctrl+g"], "command": "doh_cancel_select"},
  { "keys": ["ctrl+g"], "command": "single_selection", "context":
    [
      { "key": "num_selections", "operator": "not_equal", "operand": 1 },
      { "key": "doh_toggle_select", "operator": "equal", "operand": false }
    ]
  },
  { "keys": ["ctrl+g"], "command": "clear_fields", "context":
    [
      { "key": "has_next_field", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "clear_fields", "context":
    [
      { "key": "has_prev_field", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_overlay", "context":
    [
      { "key": "overlay_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_auto_complete", "context":
    [
      { "key": "auto_complete_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "incremental_find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "replace"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["enter"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },  { "keys": ["enter"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "incremental_find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },  { "keys": ["enter"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "replace"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },

  { "keys": ["super+x"], "command": "doh_cut", "context":
    [
      { "key": "doh_toggle_select", "operator": "equal", "operand": true }
    ]
  },

    //////////////////////////////
    // Begin I-search //
    //////////////////////////////
    {"keys": ["ctrl+s"], "command": "jove_inc_search", "args": {"forward": true, "regex": false}},
    {"keys": ["ctrl+r"], "command": "jove_inc_search", "args": {"forward": false, "regex": false}},
    {"keys": ["ctrl+s"], "command": "jove_inc_search", "args": {"cmd": "next", "keep": false, "forward": true},
        "context": [ {"key": "i_search_active"} ]
    },
    {"keys": ["ctrl+r"], "command": "jove_inc_search", "args": {"cmd": "next", "keep": false, "forward": false},
        "context": [ {"key": "i_search_active"} ]
    },

    {"keys": ["ctrl+w"], "command": "jove_inc_search", "args": {"cmd": "append_from_cursor"},
        "context": [ {"key": "i_search_active"} ]
    },
    {"keys": ["super+d"], "command": "jove_inc_search", "args": {"cmd": "next", "keep": true},
        "context": [ {"key": "i_search_active"} ]
    },
    {"keys": ["backspace"], "command": "jove_inc_search", "args": {"cmd": "pop"},
        "context": [ {"key": "i_search_active"} ]
    },
    {"keys": ["super+a"], "command": "jove_inc_search", "args": {"cmd": "keep_all"},
        "context": [ {"key": "i_search_active"} ]
    },



  ////////////// basic movement keybinds from native Emacs
  { "keys": ["ctrl+f"], "command": "move", "args": {"by": "characters", "forward": true, "extend": false}},
  { "keys": ["ctrl+b"], "command": "move", "args": {"by": "characters", "forward": false, "extend": false}},

  ////////////// additional basic movement keybinds from our customized Emacs
//  { "keys": ["ctrl+,"], "command": "move", "args": {"by": "pages", "forward": false, "extend": false}},
//  { "keys": ["ctrl+."], "command": "move", "args": {"by": "pages", "forward": true, "extend": false}},
//  { "keys": ["ctrl+j","ctrl+a"], "command": "move_to", "args": {"to": "bof", "extend": false}},
//  { "keys": ["ctrl+j","ctrl+e"], "command": "move_to", "args": {"to": "eof", "extend": false}},

  ////////////// MySQL
  { "keys": ["ctrl+j", "ctrl+m"], "command": "dohmysql_query", "args": {"allow_read": true, "allow_write": true}},

  ////////////// basic editing keybinds from Emacs
  { "keys": ["ctrl+h"], "command": "left_delete"},
  { "keys": ["ctrl+d"], "command": "right_delete"},

  ////////////// split windows
  { "keys": ["ctrl+x", "2"], "command": "create_pane_with_file", "args": {"direction": "down"} },
  { "keys": ["ctrl+x", "3"], "command": "create_pane_with_file", "args": {"direction": "right"} },

/*
  -=- /Users/kem/src/dohdots/sublime/kem/kem.sublime-keymap -=-
*/

  ////////////////////////////////////////// put all my custom ones here so I can overwrite if needed

  { "keys": ["ctrl+z"], "command": "noop"},
  { "keys": ["ctrl+/"], "command": "undo"},

  { "keys": ["super+u"], "command": "upper_case" },
  { "keys": ["super+l"], "command": "lower_case" },
  { "keys": ["super+shift+g"], "command": "find_all_under" },

  {
    "keys": ["ctrl+x","1"],
    "command": "set_layout",
    "args":
    {
      "cols": [0.0, 1.0],
      "rows": [0.0, 1.0],
      "cells": [[0, 0, 1, 1]]
    }
  },
  { "keys": ["ctrl+x", "o"], "command": "doh_cycle_focus_group"},

  { "keys": ["super+enter"], "command": "replace_all", "args": {"close_panel": true},
     "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
  },

  { "keys": ["ctrl+j", "ctrl+d", "ctrl+c"], "command": "toggle_keep_console_active"},
  { "keys": ["ctrl+j", "ctrl+d", "ctrl+l"], "command": "toggle_log_commands"},
  { "keys": ["ctrl+j", "ctrl+g", "ctrl+d"], "command": "git_raw", "args": { "command": "git difftool", "append_current_file": true, "may_change_files": false } },
  { "keys": ["ctrl+j", "ctrl+g", "ctrl+c"], "command": "git_raw", "args": { "command": "git checkout", "append_current_file": true } },
  { "keys": ["ctrl+j", "ctrl+i"], "command": "reindent"},
  { "keys": ["ctrl+j", "ctrl+r"], "command": "show_panel", "args": {"panel": "replace"} },
  { "keys": ["ctrl+j","ctrl+l"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
  { "keys": ["ctrl+j","ctrl+f"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} }
]
