[
  { "keys": ["ctrl+y"], "command": "yank_from_clipboard"},
  { "keys": ["ctrl+k"], "command": "kill_to_clipboard"},

  { "keys": ["ctrl+z"], "command": "undo"},

  // quick panel of only currently open files - sort of like emacs switch buffer
  { "keys": ["ctrl+x", "b"], "command": "goto_open_file"},

  // may not keep this long term, but it's handy for transition if nothing else
  { "keys": ["ctrl+x", "ctrl+s"], "command": "save"},

  // many of these are copies of the default keybindings for Escape, just mapped to ctrl+g instead, but with some tweaks
  { "keys": ["ctrl+g"], "command": "onn_cancel_select"},
  { "keys": ["ctrl+g"], "command": "single_selection", "context":
    [
      { "key": "num_selections", "operator": "not_equal", "operand": 1 },
      { "key": "onn_toggle_select", "operator": "equal", "operand": false }
    ]
  },
  { "keys": ["ctrl+g"], "command": "clear_fields", "context":
    [
      { "key": "has_next_field", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "clear_fields", "context":
    [
      { "key": "has_prev_field", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_overlay", "context":
    [
      { "key": "overlay_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_auto_complete", "context":
    [
      { "key": "auto_complete_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "incremental_find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+g"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "replace"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["enter"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },  { "keys": ["enter"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "incremental_find"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },  { "keys": ["enter"], "command": "hide_panel", "args": {"cancel": true},
    "context":
    [
      {"key": "panel", "operand": "replace"},
      { "key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },

  // block select
  { "keys": ["ctrl+space"], "command": "onn_start_select" },
  { "keys": ["ctrl+space"], "command": "onn_cancel_select", "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },

  { "keys": ["super+x"], "command": "onn_cut", "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["super+c"], "command": "onn_copy", "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },

  { "keys": ["ctrl+w"], "command": "cut"},
  { "keys": ["ctrl+w"], "command": "onn_cut", "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },

  { "keys": ["ctrl+c"], "command": "copy"},
  { "keys": ["ctrl+c"], "command": "onn_copy", "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },

  // tweaked pseudo incremental search stuff
  { "keys": ["ctrl+s"], "command": "onn_show_find"},
  { "keys": ["ctrl+s"], "command": "onn_find_next", "context":
    [
      {"key": "panel", "operand": "find"},
      {"key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },

  { "keys": ["ctrl+r"], "command": "onn_show_reverse_find"},
  { "keys": ["ctrl+r"], "command": "onn_find_next", "context":
    [
      {"key": "panel", "operand": "find"},
      {"key": "panel_visible", "operator": "equal", "operand": true }
    ]
  },

  ////////////// basic movement keybinds from native Emacs
  { "keys": ["ctrl+a"], "command": "move_to", "args": {"to": "bol", "extend": false}},
  { "keys": ["ctrl+a"], "command": "move_to", "args": {"to": "bol", "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+e"], "command": "move_to", "args": {"to": "eol", "extend": false}},
  { "keys": ["ctrl+e"], "command": "move_to", "args": {"to": "eol", "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+f"], "command": "move", "args": {"by": "characters", "forward": true, "extend": false}},
  { "keys": ["ctrl+f"], "command": "move", "args": {"by": "characters", "forward": true, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+b"], "command": "move", "args": {"by": "characters", "forward": false, "extend": false}},
  { "keys": ["ctrl+b"], "command": "move", "args": {"by": "characters", "forward": false, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+p"], "command": "move", "args": {"by": "lines", "forward": false, "extend": false}},
  { "keys": ["ctrl+p"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+n"], "command": "move", "args": {"by": "lines", "forward": true, "extend": false}},
  { "keys": ["ctrl+n"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },

  ////////////// additional basic movement keybinds from our customized Emacs
  { "keys": ["ctrl+u"], "command": "move", "args": {"by": "words", "forward": false, "extend": false}},
  { "keys": ["ctrl+u"], "command": "move", "args": {"by": "words", "forward": false, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+o"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": false}},
  { "keys": ["ctrl+o"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+,"], "command": "move", "args": {"by": "pages", "forward": false, "extend": false}},
  { "keys": ["ctrl+,"], "command": "move", "args": {"by": "pages", "forward": false, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+."], "command": "move", "args": {"by": "pages", "forward": true, "extend": false}},
  { "keys": ["ctrl+."], "command": "move", "args": {"by": "pages", "forward": true, "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+j","ctrl+a"], "command": "move_to", "args": {"to": "bof", "extend": false}},
  { "keys": ["ctrl+j","ctrl+a"], "command": "move_to", "args": {"to": "bof", "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },
  { "keys": ["ctrl+j","ctrl+e"], "command": "move_to", "args": {"to": "eof", "extend": false}},
  { "keys": ["ctrl+j","ctrl+e"], "command": "move_to", "args": {"to": "eof", "extend": true}, "context":
    [
      { "key": "onn_toggle_select", "operator": "equal", "operand": true }
    ]
  },

  ////////////// MySQL
  { "keys": ["ctrl+j", "ctrl+m"], "command": "run_mysql"},

  ////////////// basic editing keybinds from Emacs
  { "keys": ["ctrl+h"], "command": "left_delete"},
  { "keys": ["ctrl+d"], "command": "right_delete"},


/*
  -=- /Users/makani/src/sublime/makani/makani.sublime-keymap -=-
*/

  ////////////////////////////////////////// put all my custom ones here so I can overwrite if needed

  { "keys": ["ctrl+z"], "command": "noop"},
  { "keys": ["ctrl+/"], "command": "undo"},

  { "keys": ["super+u"], "command": "upper_case" },
  { "keys": ["super+l"], "command": "lower_case" },
  { "keys": ["super+shift+g"], "command": "find_all_under" },
  { "keys": ["ctrl+x", "2"], "command": "create_pane_with_file", "args": {"direction": "right"} },
  { "keys": ["ctrl+x", "3"], "command": "create_pane_with_file", "args": {"direction": "down"} },

  {
    "keys": ["ctrl+x","1"],
    "command": "set_layout",
    "args":
    {
      "cols": [0.0, 1.0],
      "rows": [0.0, 1.0],
      "cells": [[0, 0, 1, 1]]
    }
  },
  { "keys": ["ctrl+x", "o"], "command": "onn_cycle_focus_group"},

  { "keys": ["super+enter"], "command": "replace_all", "args": {"close_panel": true},
     "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
  },

  { "keys": ["ctrl+j", "ctrl+d"], "command": "noop"},
  { "keys": ["ctrl+j", "ctrl+g", "ctrl+d"], "command": "git_diff_tool"},
  { "keys": ["ctrl+j", "ctrl+g", "ctrl+c"], "command": "git_checkout"},
  { "keys": ["ctrl+j", "ctrl+i"], "command": "reindent"},
  { "keys": ["ctrl+j", "ctrl+r"], "command": "show_panel", "args": {"panel": "replace"} },
  { "keys": ["ctrl+j","ctrl+l"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
  { "keys": ["ctrl+j","ctrl+f"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} }
]
