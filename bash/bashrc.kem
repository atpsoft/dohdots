export VISUAL=emacs
export PAGER=cat
			 
#note: $* expands to $1 $2 $3
#for functions
#while $@ expands to "$1 $2 $3 ..."
function parse_git_branch {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "("${ref#refs/heads/}")"
}

PS1="\w \$(parse_git_branch)\$ "

alias cl='create_database.rb -z'

# use this to go to a dev directory 
function cdd {
		cd ~/dev
		if [ $# -gt 0 ]
		then
				cd $@
		fi
}

alias gr='git remote -v'
alias gs='git status'
alias gc='git commit -m'
alias gco='git checkout'
alias gl='git log -n10'
alias gls='git log -n3'
#alias gsc='git svn dcommit'
#alias gsl='git svn log -n10'
#alias gsu='git svn rebase'
#alias gsi='git svn info'
#git pull, then push
alias gp='git push'
alias gpp='git pp'
#git pull with logging
alias gpl='git pl'
#use gd -b to ignore whitespace
alias gd='git diff'
alias gdd='git difftool'
alias gph='git push heroku'
alias gitpulltags='git fetch --tags'
alias gitpushtags='git push --tags'
alias gitundocommit='git reset --soft HEAD^'
alias gitamend='git commit --amend -m'
alias gitbranchdiff='git diff master..HEAD'
alias gitbranchlog='git log master..HEAD'
alias gitwhatwillupdate='git fetch; git diff master origin/master'
#show what will be merged if you merge the given branch to the master (... means changes since the branch branched)
function gitdiffbranch
{
		git diff master...$@
}

function gitdiffcommit
{
		git difftool $1^..$1 $2
}

#show the filenames that changed in a given commit
function gitchanged
{
		git diff --name-status $1^..$1 | cut -f2
}

#find in non-ignore files, recursively
function fl {
 grep -rnI --exclude-dir=.svn --exclude-dir=.git --exclude-dir=.metadata --exclude=i18n-dump.sql --exclude=*.log --exclude=jquery*.js --exclude=jwplayer.js --exclude=swfobject.js --exclude=iftables.sql --exclude-dir=target --exclude=*~ --exclude-dir=WEB-INF --exclude-dir=actionscriptResources "$@" .
}

#find, but just list the filenames it's found in
function ff {
 fl -l "$@"
}


