# in conjunction with code in .bash_profile, attempts to standardize dot file loading for the different kinds of shell contexts (login, non-interactive, etc.)
export BASHRCLOADED=true

# emacs focused setup
export VISUAL=emacs
export EDITOR=emacs
export PAGER=cat

### this section of commands is to make losing command history less likely, especially when having multiple terminals open
# limits the number of lines in the history file
# you can use this script: https://raw.github.com/atpsoft/dohdots/master/bash/archive_bash_history
# if you want to archive them above 100k lines -- cron it up weekly or something
export HISTFILESIZE=100000
# number of commands to remember in ram
export HISTSIZE=10000
# before the prompt is displayed, any history being buffered is flushed
export PROMPT_COMMAND="history -a"
# history is appended to the file, rather than overwriting (for multiple shell instances running at same time)
shopt -s histappend

# typically used for bug fix branches
function gitmergecommit
{
  git cherry-pick $1
  git reset --soft HEAD^
  git commit -m "merge of commit $1"
}

# recursive grep, ignoring vcs data, log files, preferences, etc.
function fl {
 grep -rnI --exclude-dir=.svn --exclude-dir=.git --exclude-dir=.metadata --exclude=i18n-dump.sql --exclude=*.log --exclude=jquery*.js --exclude=jwplayer.js --exclude=swfobject.js --exclude=iftables.sql --exclude-dir=target --exclude=*~ --exclude-dir=WEB-INF --exclude-dir=actionscriptResources "$@" .
}

# same as fl, but only list the filenames
function ff {
 fl -l "$@"
}

#for windows, harmless elsewhere
export CYGWIN="binmode ntsec tty"

# hook for user specific additions
[[ -s "$HOME/.bashrc.user" ]] && source "$HOME/.bashrc.user"

# hook for platform,whatever additions
[[ -s "$HOME/.bashrc.local" ]] && source "$HOME/.bashrc.local"

# this loads RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"
