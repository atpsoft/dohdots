#!/usr/bin/env ruby
require 'date'

def link_file(src, dest)
  src = get_path(src)
  dest = get_path(dest)
  if is_non_linked_file(dest)
    raise "File already exists: #{dest} -- aborting installation"
  end
  `rm -f #{dest}`
  `ln -s #{src} #{dest}`
  puts "linked #{src} to #{dest}"
end

def merge_files(user, src, dest)
  src = get_path(src)
  dest = get_path(dest)
  lines = ["#generated by dohdots install -- via ruby < <(curl -B http://dohdots.eegore.com/install.rb)\n"]
  if is_non_linked_file(dest)
    destbackup = dest + '.backup-by-dohdots-install-' + DateTime.now.strftime('%F:%T')
    puts "moving #{dest} to #{destbackup}"
    `mv #{dest} #{destbackup}`
    lines += ["#previous file exists at: #{destbackup}\n"]
  end
  userfile = src + '.' + user
  lines += File.readlines(src)
  if File.exist?(userfile)
    lines += File.readlines(userfile)
  end
  file = File.new(dest, 'w')
  file << lines.join("")
end

def get_path(file, fromhome = true)
  root = fromhome ? ENV['HOME'] : '/'
  File.join(root, file)
end

def ensure_exists(file)
  path = get_path(file)
  `mkdir -p #{path}`
end

def is_non_linked_file(file)
  File.exist?(file) && !File.symlink?(file)  
end

def is_mac
  `uname -a` =~ /Darwin/
end

def getuser
  user = ENV['USER']
  usermap = {'kmason' => 'kem', 'mmason' => 'makani', 'tlarson' => 'trent'}
  user = usermap[user] if usermap[user]
  user
end

def get_dohdots
  if (!File.exist?(get_path('src/dohdots')))
    puts "gitting dohdots from github"
    ensure_exists('src')
    puts `git clone git://github.com/pquimo/dohdots.git ~/src/dohdots`
  else
    puts "updating dohdots from github"
    puts `cd ~/src/dohdots; git pull`
  end
end

def link_files
  user = getuser
  puts "linking dotfiles for user: #{user}"
  if is_mac
    puts "Since we're on a mac, we'll link DefaultKeyBinding.dict"
    ensure_exists('Library/KeyBindings')
    link_file('src/dohdots/mac/DefaultKeyBinding.dict', 'Library/KeyBindings/DefaultKeyBinding.dict')
  end
  link_file('src/dohdots/git/gitignore', '.gitignore')
  link_file('src/dohdots/bash/bash_profile', '.bash_profile')
  if (File.exist?(get_path("src/dohdots/bash/bashrc.#{user}")))
    link_file("src/dohdots/bash/bashrc.#{user}", '.bashrc.user')
  end
  link_file('src/dohdots/bash/bashrc', '.bashrc')
  link_file('src/dohdots/emacs/emacs', '.emacs')
  link_file('src/dohdots/emacs/emacs.d', '.emacs.d')
  if (File.exist?(get_path("src/dohdots/emacs/emacs.#{user}")))
    link_file("src/dohdots/emacs/emacs.#{user}", '.emacs.user')
  end
  merge_files(user, 'src/dohdots/git/gitconfig', '.gitconfig')
end

get_dohdots
link_files
